// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// hashfunc_vec_cpp
IntegerVector hashfunc_vec_cpp(std::vector< std::vector<int> > keys, IntegerVector randomint);
RcppExport SEXP zobrist_hashfunc_vec_cpp(SEXP keysSEXP, SEXP randomintSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector< std::vector<int> > >::type keys(keysSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type randomint(randomintSEXP);
    rcpp_result_gen = Rcpp::wrap(hashfunc_vec_cpp(keys, randomint));
    return rcpp_result_gen;
END_RCPP
}
// KeyToStr
std::string KeyToStr(IntegerVector x, int keysize);
RcppExport SEXP zobrist_KeyToStr(SEXP xSEXP, SEXP keysizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type keysize(keysizeSEXP);
    rcpp_result_gen = Rcpp::wrap(KeyToStr(x, keysize));
    return rcpp_result_gen;
END_RCPP
}
// StrToKey
IntegerVector StrToKey(std::string x, int keysize);
RcppExport SEXP zobrist_StrToKey(SEXP xSEXP, SEXP keysizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type keysize(keysizeSEXP);
    rcpp_result_gen = Rcpp::wrap(StrToKey(x, keysize));
    return rcpp_result_gen;
END_RCPP
}
// KeysToStrs
CharacterVector KeysToStrs(ListOf<IntegerVector> x, int keysize);
RcppExport SEXP zobrist_KeysToStrs(SEXP xSEXP, SEXP keysizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ListOf<IntegerVector> >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type keysize(keysizeSEXP);
    rcpp_result_gen = Rcpp::wrap(KeysToStrs(x, keysize));
    return rcpp_result_gen;
END_RCPP
}
// StrsToKeys
ListOf<IntegerVector> StrsToKeys(CharacterVector x, int keysize);
RcppExport SEXP zobrist_StrsToKeys(SEXP xSEXP, SEXP keysizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type keysize(keysizeSEXP);
    rcpp_result_gen = Rcpp::wrap(StrsToKeys(x, keysize));
    return rcpp_result_gen;
END_RCPP
}
// MakeHashTable
List MakeHashTable(int htsize, List values, IntegerVector index);
RcppExport SEXP zobrist_MakeHashTable(SEXP htsizeSEXP, SEXP valuesSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type htsize(htsizeSEXP);
    Rcpp::traits::input_parameter< List >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(MakeHashTable(htsize, values, index));
    return rcpp_result_gen;
END_RCPP
}
